var r={},c=typeof queueMicrotask=="function"?queueMicrotask:n=>Promise.resolve().then(n),o=c;r.fromCallback=function(n,e){if(n===void 0){var i=new Promise(function(f,u){n=function(t,s){t?u(t):f(s)}});n[e!==void 0?e:"promise"]=i}else if(typeof n!="function")throw new TypeError("Callback must be a function");return n};r.fromPromise=function(n,e){if(e===void 0)return n;n.then(function(i){o(()=>e(null,i))}).catch(function(i){o(()=>e(i))})};export{r as c};
